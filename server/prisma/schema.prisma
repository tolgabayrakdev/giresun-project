// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  username    String    @unique
  password    String
  roleId      Int       @default(2) // Varsayılan rol: user
  role        Role      @relation(fields: [roleId], references: [id])
  posts       Post[]    // Giresun Sosyal modülü için gönderiler
  comments    Comment[] // Giresun Sosyal modülü için yorumlar
  events      Event[]   // Giresun Sosyal modülü için etkinlikler
  news        News[]    // Giresun Haber modülü için haberler
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Role {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  users       User[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  content     String
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  comments    Comment[] // Gönderiye yapılan yorumlar
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  postId      Int
  post        Post      @relation(fields: [postId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Event {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  date        DateTime
  location    String
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model News {
  id          Int       @id @default(autoincrement())
  title       String
  content     String
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}